syntax = "proto3";
package squad.liquidfarming.v1beta1;

import "google/protobuf/duration.proto";
import "gogoproto/gogo.proto";

import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/cosmosquad-labs/squad/x/liquidfarming/types";

// Params defines the parameters for the module.
message Params {
  option (gogoproto.goproto_getters) = false;

  repeated LiquidFarm liquid_farms = 1 [(gogoproto.nullable) = false];

  google.protobuf.Duration rewards_auction_duration = 2 [(gogoproto.nullable) = false, (gogoproto.stdduration) = true];

  string fee_collector = 3;
}

// LiquidFarm defines liquid farm object that provides auto compounding functionality
// for the liquidity pool and undergoes farming rewards auction process.
// See the technical spec for more detailed information.
message LiquidFarm {
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;

  uint64 pool_id = 1;

  string min_farm_amount = 2
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];

  string min_bid_amount = 3
      [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false];

  string fee_rate = 4 [(gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false];
}
